version: 5.12.0

type: DeclarativeSource

description: >-
  Slab source connector for ingesting data from the slab API.

  Slab is a platform to easily create, organise, and discover knowledge for your
  entire organisation, from non-technical to tech-savvy. https://slab.com/


  In order to use this source, you must first create an account and log in. 

  The API uses a bearer token which can be obtained by navigating to Settings ->
  Developer -> Admin Token.

  You must be on a the business plan to obtain a token.

  Slab uses Graphql API and this connector streams the `users`, `posts` and
  `topics` endpoints. Find more information about the API here
  https://studio.apollographql.com/public/Slab/variant/current/home 

check:
  type: CheckStream
  stream_names:
    - users

definitions:
  streams:
    users:
      type: DeclarativeStream
      name: users
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: graphql
          http_method: POST
          request_body_json:
            query: >-
              query { organization { users { id name title email description
              type deactivatedAt insertedAt updatedAt avatar { original thumb }
              }} }
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - organization
              - users
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/users"
    topics:
      type: DeclarativeStream
      name: topics
      primary_key:
        - id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: graphql
          http_method: POST
          request_body_json:
            query: >-
              query { organization { topics { id hierarchy description name
              memberEditable insertedAt privacy updatedAt inheritParent parent {
              id name } ancestors { id name } children { id name } banner {
              original } } } }
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - organization
              - topics
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/topics"
    posts:
      type: DeclarativeStream
      name: posts
      primary_key:
        - post_id
      retriever:
        type: SimpleRetriever
        requester:
          $ref: "#/definitions/base_requester"
          path: graphql
          http_method: POST
          request_body_json:
            query: >-
              query { search(query: "posts" ,first: 100,  types: [POST]) { edges
              { node { ... on PostSearchResult { post { id title content
              insertedAt publishedAt archivedAt owner { id name email } topics {
              id name } } } } }  } }
        record_selector:
          type: RecordSelector
          extractor:
            type: DpathExtractor
            field_path:
              - data
              - search
              - edges
      transformations:
        - type: AddFields
          fields:
            - path:
                - post_id
              value: "{{record['node']['post']['id']}}"
        - type: RemoveFields
          field_pointers:
            - - node
              - post
              - id
      schema_loader:
        type: InlineSchemaLoader
        schema:
          $ref: "#/schemas/posts"
  base_requester:
    type: HttpRequester
    url_base: https://api.slab.com/v1/
    authenticator:
      type: ApiKeyAuthenticator
      api_token: "{{ config[\"api_key\"] }}"
      inject_into:
        type: RequestOption
        field_name: Authorization
        inject_into: header

streams:
  - $ref: "#/definitions/streams/users"
  - $ref: "#/definitions/streams/topics"
  - $ref: "#/definitions/streams/posts"

spec:
  type: Spec
  connection_specification:
    type: object
    $schema: http://json-schema.org/draft-07/schema#
    required:
      - api_key
    properties:
      api_key:
        type: string
        name: api_key
        order: 0
        title: API Key
        airbyte_secret: true
      start_date:
        type: string
        description: Date from when the sync should start
        order: 1
        title: start_date
        format: date-time
        pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$
    additionalProperties: true

metadata:
  autoImportSchema:
    users: true
    topics: true
    posts: true
  testedStreams:
    users:
      streamHash: ec07f75ca7a97a3ae054406d230fe2c8a8010e13
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    topics:
      streamHash: 0758a377c102cd4823b36104e60949e448a5c49b
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
    posts:
      streamHash: 8c56a57b0486ba3ace42c2daa74a899975b571a3
      hasResponse: true
      responsesAreSuccessful: true
      hasRecords: true
      primaryKeysArePresent: true
      primaryKeysAreUnique: true
  assist:
    docsUrl: https://studio.apollographql.com/public/Slab/variant/current/home

schemas:
  users:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      type:
        type:
          - string
          - "null"
      description:
        type:
          - string
          - "null"
      avatar:
        type:
          - object
          - "null"
        properties:
          original:
            type:
              - string
              - "null"
          thumb:
            type:
              - string
              - "null"
      email:
        type:
          - string
          - "null"
      id:
        type: string
      insertedAt:
        type:
          - string
          - "null"
      name:
        type:
          - string
          - "null"
      title:
        type:
          - string
          - "null"
      updatedAt:
        type:
          - string
          - "null"
    required:
      - id
  topics:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      description:
        type:
          - string
          - "null"
      ancestors:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            id:
              type:
                - string
                - "null"
            name:
              type:
                - string
                - "null"
      banner:
        type:
          - object
          - "null"
        properties:
          original:
            type:
              - string
              - "null"
      children:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            id:
              type:
                - string
                - "null"
            name:
              type:
                - string
                - "null"
      hierarchy:
        type:
          - array
          - "null"
        items:
          type:
            - string
            - "null"
      id:
        type: string
      inheritParent:
        type:
          - boolean
          - "null"
      insertedAt:
        type:
          - string
          - "null"
      memberEditable:
        type:
          - string
          - "null"
      name:
        type:
          - string
          - "null"
      parent:
        type:
          - object
          - "null"
        properties:
          id:
            type:
              - string
              - "null"
          name:
            type:
              - string
              - "null"
      privacy:
        type:
          - string
          - "null"
      updatedAt:
        type:
          - string
          - "null"
    required:
      - id
  posts:
    type: object
    $schema: http://json-schema.org/schema#
    additionalProperties: true
    properties:
      node:
        type:
          - object
          - "null"
        properties:
          post:
            type:
              - object
              - "null"
            properties:
              content:
                type:
                  - string
                  - "null"
              insertedAt:
                type:
                  - string
                  - "null"
              owner:
                type:
                  - object
                  - "null"
                properties:
                  email:
                    type:
                      - string
                      - "null"
                  id:
                    type:
                      - string
                      - "null"
                  name:
                    type:
                      - string
                      - "null"
              publishedAt:
                type:
                  - string
                  - "null"
              title:
                type:
                  - string
                  - "null"
              topics:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    id:
                      type:
                        - string
                        - "null"
                    name:
                      type:
                        - string
                        - "null"
      post_id:
        type: string
    required:
      - post_id
